## Question 1


create table student(
regno varchar (20),
name varchar (50),
major varchar (20),
bdate date,
primary key (regno));

create table course(
course# int,
cname varchar (30),
dept varchar (30),
primary key (course#));

create table text(
book_isbn int,
booktitle varchar(50),
publisher varchar(50),
author varchar(50),
primary key (book_isbn));

create table enroll(
regno varchar (20),
course# int,
sem int,
book_isbn int,
primary key (regno,course#),
foreign key (course#) references course(course#) on delete cascade,
foreign key (regno) references student(regno) on delete cascade,
foreign key (book_isbn) references text(book_isbn) on delete cascade);

create table book_adoption(
course# int,
sem int,
book_isbn int,
primary key (course#, book_isbn),
foreign key (course#) references course(course#) on delete cascade,
foreign key (book_isbn) references text(book_isbn) on delete cascade);


## Question 2


insert into student values ('a2120','Ayush','IT','14-APR-03');
insert into student values ('b1440','Piyush','CSE','13-JUNE-01');
insert into student values ('c4569','Zayn','CCE','15-AUG-04');
insert into student values ('a7221','Anish','DSE','15-AUG-04');
insert into student values ('f3611','Gautham','ECE','16-SEP-02');

insert into course values ('1051','Database Systems','ICT');
insert into course values ('1052','Embedded Systems','ECE');
insert into course values ('1040','Digital Systems','EEE');
insert into course values ('1042','Aerospace Engineering','AERO');
insert into course values ('1060','Cyber Security','CSE');

insert into text values (23,'Percy Jackson','Miramax Books','Rick Riordan');
insert into text values (52,'Harry Potter','Bloomsbury Publishing','JK Rowling');
insert into text values (24,'Heroes Of Olympus','Miramax Books','Rick Riordan');
insert into text values (64,'Do something with your life','Ayush Books','Ayush Khandelwal');
insert into text values (74,'The Hunger Games','Scholastic','Suzanne Collins');

insert into enroll values('a2120', 1052, 5, 64);
insert into enroll values('a2120', 1040, 5, 24);
insert into enroll values('c4569', 1052, 4, 64);
insert into enroll values('f3611', 1042, 3, 23);
insert into enroll values('b1440', 1060, 1, 74);
insert into enroll values ('c4569',1051,4,74);
insert into enroll values ('b1440',1051,4,23);

insert into book_adoption values (1051,4,74);
insert into book_adoption values (1042,3,23);
insert into book_adoption values (1060,1,74);
insert into book_adoption values (1040,5,24);
insert into book_adoption values (1052,4,64);
insert into book_adoption values (1051,4,23);


TABLES AND VALUES


STUDENT

REGNO                NAME						MAJOR		     BDATE
-------------------- -------------------------------------------------- -------------------- ---------
a2120                Ayush						IT                   14-APR-03

b1440                Piyush						CSE                  13-JUN-01

c4569                Zayn						CCE                  15-AUG-04

a7221                Anish						DSE                  15-AUG-04

f3611                Gautham						ECE                  16-SEP-02


COURSE

COURSE#    CNAME                          DEPT
---------- ------------------------------ ------------------------------
      1051 Database Systems               ICT
      1052 Embedded Systems               ECE
      1040 Digital Systems                EEE
      1042 Aerospace Engineering          AERO
      1060 Cyber Security                 CSE

BOOK_ADOPTION

COURSE#    SEM        BOOK_ISBN
---------- ---------- ----------
      1040          5         24
      1052          4         64
      1042          3         23
      1060          1         74
      1051          4         74
      1051          4         23

ENROLL 

REGNO                COURSE#    SEM        BOOK_ISBN
-------------------- ---------- ---------- ----------
a2120                      1052          5         64
a2120                      1040          5         24
c4569                      1052          4         64
f3611                      1042          3         23
b1440                      1060          1         74
c4569                      1051          4         74
b1440                      1051          4         23


TEXT

 BOOK_ISBN BOOKTITLE					      PUBLISHER						 AUTHOR
---------- -------------------------------------------------- -------------------------------------------------- --------------------------------------------------
        23 Percy Jackson				      Miramax Books					 Rick Riordan

        52 Harry Potter					      Bloomsbury Publishing				 JK Rowling

        24 Heroes Of Olympus			              Miramax Books					 Rick Riordan

        64 Do something with your life   		      Ayush Books					 Ayush Khandelwal

        74 The Hunger Games				      Scholastic					 Suzanne Collins


##Question 3a

select cname from course
where course# in ( select course# from book_adoption
group by course#
having count(course#) > 1);

##Question 3b

SELECT DISTINCT C.DEPT
FROM COURSE C
WHERE NOT EXISTS (
	SELECT *
	FROM BOOK_ADOPTION BA
	WHERE BA.COURSE# = C.COURSE#
	AND BA.BOOK_ISBN NOT IN (
		SELECT T.BOOK_ISBN
		FROM TEXT T
		WHERE T.PUBLISHER = 'Miramax Books'
	)
);

##Question 3c

select name, count(distinct dept) as number_of_departments
from student natural join course natural join enroll
where regno in (
select regno from enroll
group by regno having count (dept) >= 2)
group by name;

##Question 3d

select regno
from student
MINUS
select regno
from enroll;

##Question 3e

SELECT C.DEPT
FROM COURSE C
WHERE NOT EXISTS (
SELECT T.BOOK_ISBN
FROM TEXT T
WHERE T.PUBLISHER = 'Miramax Books'
MINUS
SELECT BA.BOOK_ISBN
FROM BOOK_ADOPTION BA
WHERE BA.COURSE# = C.COURSE#
);

##Question 3f

select distinct booktitle
from text natural join book_adoption natural join course
where course# in (
select course# from
enroll);

##Question 3g

SELECT BA.COURSE#
FROM BOOK_ADOPTION BA
WHERE BA.BOOK_ISBN IN (
SELECT T.BOOK_ISBN
FROM TEXT T3
WHERE T.PUBLISHER = 'Miramax Books'
)
GROUP BY BA.COURSE#
HAVING COUNT(DISTINCT BA.BOOK_ISBN) >= 2;

##Question 3h

select name, regno, count(regno) as num_of_books
from student natural join enroll natural join book_adoption
group by name, regno
having count(regno)>= all (
select count(book_isbn)
from book_adoption
group by course#);

##Question 3i

select publisher, count(distinct book_isbn) as number_of_books_published
from text
where book_isbn in (
select book_isbn
from text)
group by publisher;

##Question 3j

SELECT regno,name
FROM enroll natural join student
minus
( SELECT regno,name
FROM enroll natural join student
where course# not in (
SELECT course#
FROM book_adoption)
);




